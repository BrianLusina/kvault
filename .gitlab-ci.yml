# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence

image: python:3.10.4

include:
  - template: Security/SAST.gitlab-ci.yml
  - project: sanctumlabs/tools/ci-workflows
    file: .gitlab/templates/slack-notification.yml
  - project: sanctumlabs/tools/ci-workflows
    file: .gitlab/templates/sonarcloud.yml
  - project: sanctumlabs/tools/ci-workflows
    file: .gitlab/templates/publish-pypi.yml

stages:
  - lint
  - analysis
  - test
  - build
  - publish
  - release
  - docker

before_script:
  - export POETRY_HOME=/opt/poetry
  - python3 -m venv $POETRY_HOME
  - pip install --upgrade pip
  - pip install poetry
  - poetry install

lint:
  stage: lint
  script:
    - make lint

sonarcloud-analysis:
  stage: analysis
  extends: .sonarcloud
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_REF_NAME == '$CI_DEFAULT_BRANCH' || $CI_PIPELINE_SOURCE == 'merge_request_event'

sast:
  stage: test

test:
  stage: test
  needs:
    - lint
  script:
    - make test

build:
  stage: build
  needs:
    - test
  script: make build
  artifacts:
    name: kvault-build
    untracked: false
    when: on_success
    expire_in: "1 week"
    paths:
      - "dist/"

release_job:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - echo "running release_job"
  release:
    tag_name: '$CI_COMMIT_TAG'
    description: '$CI_COMMIT_TAG'

publish-pypi:
  stage: publish
  extends: .publish-pypi
  before_script:
    - pip install twine
    - make build
  only:
    - tags

build_docker:
  image: docker:latest
  services:
    - docker:dind
  stage: docker
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build -t $CI_REGISTRY/$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG .
    - docker push $CI_REGISTRY/$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  only:
    - tags
